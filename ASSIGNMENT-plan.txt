=> goal:
    - traverse the arena
    - get to the end
    - dont hit walls as much as possible
    - best time to win expo

=> components:
    - arduino mega 2560 R3
    - breadboard mini 400
    - ultrasonic HC-SR04
    - ir sensors
    - wheels 30-mm (d)
    - battery 12v
    - h-bridge
    - dc motor
    - wires

=> layout: [flat]
    => BACK:
        - 2 wheels
        - ir sensor
        - battery [*]
    => MIDDLE:
        - chasis made of __
        - components inside
    => FRONT:
        - ultrasonic sensors

=> spin method:
    - wheels move in opposite direction when turning CW/CCW
    - wheels move in same direction when moving forward

=> algorithm:
    => arena is represented as intersections and paths
        -> intersection:
            - 4 paths (up, down, left, right, if exist)
            - flags (fully explored, available paths, etc...)
            - age
        -> path:
            - 2 intersections
            - flags (explored/not, vertical/horizontal, dead ends, etc..)
            - length
            - width
            - bias
    => at intersection:
        - take the first unexplored path based on the bias variable
        - move along unexplored path until new intersection is reached or dead end found
    => if dead end reached:
        - find the nearest smallest age intersection with unexplored paths
        - pathfind to the nearest intersection (depth-first search?)
        - when intersection reached, take the next unexplored path

=> meetups:
    - saturdays [01:00 - **:**]
    - mondays   [11:00 - 02:30]

=> dates:
    - formative: [16/01/25]
    - final:     [23/01/25]
    - expo:      [23/01/25]
